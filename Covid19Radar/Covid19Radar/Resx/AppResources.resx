<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TextStopTheSpreadOfCOVID19" xml:space="preserve">
    <value>Help Stop the spread of COVID-19 by turning Bluetooth on</value>
    <comment>Help Stop the spread of COVID-19 by turning Bluetooth on</comment>
  </data>
  <data name="TextWeWillHelpAgenciesContact" xml:space="preserve">
    <value>If you had close contact with a COVID-19 case, We will help agencies contact you to prevent the spread of infection, to provide guidance and care</value>
    <comment>If you had close contact with a COVID-19 case, We will help agencies contact you to prevent the spread of infection, to provide guidance and care</comment>
  </data>
  <data name="TextToProtectThoseAroundYou" xml:space="preserve">
    <value>To protect those around you, Please share your data.</value>
    <comment>To protect those around you, Please share your data.</comment>
  </data>
  <data name="ButtonIWantToHelp" xml:space="preserve">
    <value>I want to help</value>
    <comment>I want to help</comment>
  </data>
  <data name="TitleHowItWorks" xml:space="preserve">
    <value>How it works</value>
    <comment>How it works page title</comment>
  </data>
  <data name="ButtonNext" xml:space="preserve">
    <value>Next</value>
    <comment>Next button</comment>
  </data>
  <data name="TitleConsentByUserPage" xml:space="preserve">
    <value>Consent by user page</value>
    <comment>Consent by user page</comment>
  </data>
  <data name="TextUserAgreement" xml:space="preserve">
    <value>User agreement</value>
    <comment>User agreement</comment>
  </data>
  <data name="TextContainsDescriptionOfConsent1" xml:space="preserve">
    <value>󰗠Contains a description of the consent sentence.Contains a description of the consent sentence.Contains a description of the consent sentence.Contains a description of the consent sentence.</value>
    <comment>󰗠Contains a description of the consent sentence.Contains a description of the consent sentence.Contains a description of the consent sentence.Contains a description of the consent sentence.</comment>
  </data>
  <data name="TextContainsDescriptionOfConsent2" xml:space="preserve">
    <value>󰗠Contains a description of the consent sentence.Contains a description of the consent sentence.Contains a description of the consent sentence.Contains a description of the consent sentence.</value>
    <comment>󰗠Contains a description of the consent sentence.Contains a description of the consent sentence.Contains a description of the consent sentence.Contains a description of the consent sentence.</comment>
  </data>
  <data name="ButtonAgreeAndProceed" xml:space="preserve">
    <value>Agree and Proceed</value>
    <comment>Agree and Proceed</comment>
  </data>
  <data name="TextStep1Description" xml:space="preserve">
    <value>No need to input personal information. We are using unique ID, allocated to you when installing an app.</value>
    <comment>How it works page step 1 description</comment>
  </data>
  <data name="TextStep1Title" xml:space="preserve">
    <value>Installing an App</value>
    <comment>How it works page step 1 title</comment>
  </data>
  <data name="TextStep2Description" xml:space="preserve">
    <value>A contact with another app user for longer than 30 min in total, within a radius closer than 2m on average is recorded as "Close Contact".</value>
    <comment>How it works page step 2 description</comment>
  </data>
  <data name="TextStep2Title" xml:space="preserve">
    <value>Recording Close Contact</value>
    <comment>How it works page step 2 title</comment>
  </data>
  <data name="TextStep3Description" xml:space="preserve">
    <value>Please manually change your status to "Positive" after verifying your phone number.</value>
    <comment>How it works page step 3 description</comment>
  </data>
  <data name="TextStep3Title" xml:space="preserve">
    <value>If you are diagnosed COVID-19 positive</value>
    <comment>How it works page step 3 title</comment>
  </data>
  <data name="TextStep4Description" xml:space="preserve">
    <value>Bluetooth needs to be turned on to record close contact. Please go to the next page to turn it on.</value>
    <comment>How it works page step 4 description</comment>
  </data>
  <data name="TextStep4Title" xml:space="preserve">
    <value>Requirements to use this app</value>
    <comment>How it works page step 4 title</comment>
  </data>
  <data name="ButtonStart" xml:space="preserve">
    <value>Start</value>
    <comment>Start</comment>
  </data>
  <data name="TextCovid19Radar" xml:space="preserve">
    <value>COVID-19Radar</value>
    <comment>COVID-19Radar</comment>
  </data>
  <data name="TextProtectingOurLovedOnes" xml:space="preserve">
    <value>Protecting our loved ones from COVID-19</value>
    <comment>Protecting our loved ones from COVID-19</comment>
  </data>
</root>